@page "/users"
@using Test5Blazor.Interfaces
@using Test5Blazor.ViewModels
@inject IUserService UserService
<h1>All Users</h1>
<br />
<br />
<br />
<div class="row justify-content-center align-items-center my-5">
    <form asp-action="Index" class="row col-8 offset-2">
        <div class="col-8">
            <input type="text" class="form-control" name="SearchInput" placeholder="search by Name" />
        </div>
        <div class="col-4">
            <input type="submit" value="Search" class="btn btn-success" />
        </div>
    </form>
</div>
<div class="row">
    <div class="col-12 mb-3">
        <NavLink href="users/create" class="btn btn-primary">Add User</NavLink>
    </div>
</div>
@if (users != null && users.Count > 0)
{
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th scope="col">First Name</th>
                <th scope="col">Last Name</th>
                <th scope="col">Email</th>
                <th scope="col"> Phone Number</th>
                <th scope="col">Details</th>
                <th scope="col">Update</th>
                <th scope="col">Delete</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in users)
            {
                <tr>
                    <td>@user.FName</td>
                    <td>@user.LName</td>
                    <td>@user.Email</td>
                    <td>@user.PhoneNumber</td>
                    <td><NavLink  class="btn btn-primary">Details</NavLink></td>
                    <td><NavLink href="@($"/users/update/{user.Id}")" class="btn btn-success">Update</NavLink></td>
                    <td><button class="btn btn-danger" @onclick="() => DeleteUser(user.Id)">Delete</button></td>
                </tr>
            }


        </tbody>
    </table>


}
else
{
    <div class="mt-4 alert alert-warning">
        <h3>There is no Uers!!!!</h3>
    </div>
}

@code {
    private List<UserViewModel> users;
    private string searchInput;
    protected override async Task OnInitializedAsync()
    {
        users = (await UserService.GetAllUsersAsync(searchInput)).ToList();
    }
    private async Task DeleteUser(string userId)
    {
        var success = await UserService.DeleteUserAsync(userId);
        if (success)
        {
            users = (await UserService.GetAllUsersAsync(searchInput)).ToList();
        }
        else
        {
            users = (await UserService.GetAllUsersAsync(searchInput)).ToList();
        }
    }

}
