@page "/users/create"
@using Test5Blazor.Interfaces
@using Test5Blazor.ViewModels
@inject IUserService UserService
<h1>Add User</h1>
<br />
<br />
<EditForm Model="@userModel" OnValidSubmit="HandleAddUser">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label for="email" class="col-form-label">Email</label>
        <InputText id="email" @bind-Value="userModel.Email" class="form-control" />
        <ValidationMessage For="@(() => userModel.Email)" class="text-danger" />
    </div>
    <div class="form-group">
        <label for="fname" class="col-form-label">First Name</label>
        <InputText id="fname" @bind-Value="userModel.FName" class="form-control" />
        <ValidationMessage For="@(() => userModel.FName)" class="text-danger" />
    </div>
    <div class="form-group">
        <label for="lname" class="col-form-label">Last Name</label>
        <InputText id="lname" @bind-Value="userModel.LName" class="form-control" />
        <ValidationMessage For="@(() => userModel.LName)" class="text-danger" />
    </div>
    <div class="form-group">
        <label for="phoneNumber" class="col-form-label">Phone Number</label>
        <InputText id="phoneNumber" @bind-Value="userModel.PhoneNumber" class="form-control" />
        <ValidationMessage For="@(() => userModel.PhoneNumber)" class="text-danger" />
    </div>
   
    <div class="form-group p-4">
        <button type="submit" class="btn btn-primary">Save</button>
        <a href="/users" class="btn btn-light">Back To List</a>
    </div>
</EditForm>

@if (showSuccessMessage)
{
    <div class="alert alert-success" role="alert">
        User added successfully!
    </div>
}

@if (showErrorMessage)
{
    <div class="alert alert-danger" role="alert">
        @errorMessage
    </div>
}

@code {
    private UserViewModel userModel = new UserViewModel();
    private bool showSuccessMessage = false;
    private bool showErrorMessage = false;
    private string errorMessage = "";

    private async Task HandleAddUser()
    {
        showSuccessMessage = false;
        showErrorMessage = false;

        try
        {
            var success = await UserService.AddUser(userModel);
            if (success)
            {
                showSuccessMessage = true;
                userModel = new UserViewModel();
            }
            else
            {
                showErrorMessage = true;
                errorMessage = "An error occurred while adding the user. The user may already exist.";
            }
        }
        catch (Exception ex)
        {
            showErrorMessage = true;
            errorMessage = $" {ex.Message}";
        }
    }
}
